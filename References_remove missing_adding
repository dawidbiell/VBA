Option Explicit
'<?>======================================================================================================================================================
'Create by:     Biel, Dawid
'Updated on:    2020-03-03 15:40
'
'Contents of 'References_v1_01':
'1  Sub         References_RemoveMissing
'2  Sub         References_RemoveMissing_MyCode
'3  Function    TrustedAccessToVBAProjects
'4  Function    CreateReferancesDictionary
'5  Sub         ListReferancesProperties
'
'Requirements:
'   References -    Microsoft Visual Basic for Applications Extensibility 5.3 --> [C:\Program Files (x86)\Common Files\Microsoft Shared\VBA\VBA6\VBE6EXT.OLB]
'<?>======================================================================================================================================================

'?******************************************************************************************************************************************************
'Content Number:    1
'Name:              References_RemoveMissing
'Purpose:
'?******************************************************************************************************************************************************
Sub References_RemoveMissing()
     'Macro purpose:  To remove missing references from the VBE
     
    Dim theRef As Variant, i As Long
     
    On Error Resume Next
     
    For i = ThisWorkbook.VBProject.References.Count To 1 Step -1
        Set theRef = ThisWorkbook.VBProject.References.Item(i)
        If theRef.IsBroken = True Then
            ThisWorkbook.VBProject.References.Remove theRef
        End If
    Next i
     
    If Err <> 0 Then
        MsgBox "A missing reference has been encountered!" _
        & "You will need to remove the reference manually.", _
        vbCritical, "Unable To Remove Missing Reference"
    End If
     
    On Error GoTo 0
End Sub
 
'?******************************************************************************************************************************************************
'Content Number:    2
'Name:              References_RemoveMissing_MyCode
'Purpose:
'   Some references are built in and not able to remove
'   Some references can be MISSED but is unavailable remove or overwrit it
'?******************************************************************************************************************************************************
Sub References_RemoveMissing_MyCode()
    Dim refReference    As VBIDE.Reference
    Dim dicRefs         As Dictionary
    Dim bIsMissed       As Boolean

    Dim sGUID   As String
    Dim vAppVer As Variant
    Dim lMajor  As Long
    Dim lMinor  As Long

    Application.ScreenUpdating = False
    
    
    If Not TrustedAccessToVBAProjects Then Exit Sub
    Set dicRefs = CreateReferancesDictionary()
    
    For Each refReference In ThisWorkbook.VBProject.References
        With refReference
            On Error Resume Next
                bIsMissed = .IsBroken: If Err.Number > 0 Then bIsMissed = True
            On Error GoTo 0
            
            If Not bIsMissed Then GoTo NextRef
            sGUID = refReference.GUID
            If Not dicRefs.Exists(sGUID) Then GoTo NextRef
            
'            Call ThisWorkbook.VBProject.References.Remove(refReference)
            For Each vAppVer In dicRefs(sGUID).Keys
                lMajor = dicRefs(sGUID)(vAppVer)(0)
                lMinor = dicRefs(sGUID)(vAppVer)(1)
                If vAppVer <= Val(Application.Version) Then
                    Call ThisWorkbook.VBProject.References.AddFromGuid( _
                        GUID:=sGUID, _
                        Major:=lMajor, _
                        Minor:=lMinor)
                End If
            Next vAppVer

        End With 'refReference
NextRef:
    Next refReference
    
    ActiveSheet.Columns.AutoFit
    Set refReference = Nothing
    Application.ScreenUpdating = False
End Sub

'?******************************************************************************************************************************************************
'Content Number:    3
'Name:              TrustedAccessToVBAProjects
'Purpose:
'?******************************************************************************************************************************************************
Function TrustedAccessToVBAProjects() As Boolean
    Dim objVBA_Project As Variant
    
    TrustedAccessToVBAProjects = True
    On Error Resume Next
        Set objVBA_Project = ThisWorkbook.VBProject 'Excel
        'Set objVBA_Project = VBE.ActiveVBProject 'Access
        
        If objVBA_Project Is Nothing Then
            
            MsgBox "No Access to VB Project" & vbLf & _
            "Please allow access in Trusted Sources" & vbLf & vbLf & _
            "File > Options > Trust Center > Trust Center Settings... > Macro Settings > Trust access to the VBA project object model"
            
            TrustedAccessToVBAProjects = False
        End If
    On Error GoTo 0
End Function

'?******************************************************************************************************************************************************
'Content Number:    4
'Name:              CreateReferancesDictionary
'Purpose:
'?******************************************************************************************************************************************************
Function CreateReferancesDictionary() As Dictionary
    Dim dicTemp         As Dictionary
    Dim dicRefVer2010   As Dictionary
    Dim dicRefVer365    As Dictionary
    Dim refReference    As VBIDE.Reference
    Dim dAppVer         As Double
    Dim bIsMissed       As Boolean
    Dim vKey            As Variant

        
    'Key:   Ref.GUID
    'Item:  Array(Ref.Major, Ref.Minor, Application.Version, Ref.Name)
        
    Set dicRefVer2010 = New Dictionary
    
    dicRefVer2010.Add Key:="{000204EF-0000-0000-C000-000000000046}", Item:=Array(4, 1, "VBA")
    dicRefVer2010.Add Key:="{00020813-0000-0000-C000-000000000046}", Item:=Array(1, 7, "Excel")
    dicRefVer2010.Add Key:="{00020430-0000-0000-C000-000000000046}", Item:=Array(2, 0, "stdole")
    dicRefVer2010.Add Key:="{2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}", Item:=Array(2, 5, "Office")
    dicRefVer2010.Add Key:="{00000600-0000-0010-8000-00AA006D2EA4}", Item:=Array(2, 8, "ADOX")
    dicRefVer2010.Add Key:="{420B2830-E718-11CF-893D-00A0C9054228}", Item:=Array(1, 0, "Scripting")
    dicRefVer2010.Add Key:="{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}", Item:=Array(9, 0, "Access")
    dicRefVer2010.Add Key:="{0002E157-0000-0000-C000-000000000046}", Item:=Array(5, 3, "VBIDE")
    dicRefVer2010.Add Key:="{F2A7EE29-8BF6-4A6D-83F1-098E366C709C}", Item:=Array(1, 0, "OneNote12")
    dicRefVer2010.Add Key:="{0EA692EE-BB50-4E3C-AEF0-356D91732725}", Item:=Array(1, 0, "OneNote14")
    dicRefVer2010.Add Key:="{00025E01-0000-0000-C000-000000000046}", Item:=Array(5, 0, "DAO")
    dicRefVer2010.Add Key:="{00062FFF-0000-0000-C000-000000000046}", Item:=Array(9, 4, "Outlook")
    
    Set dicRefVer365 = New Dictionary
    dicRefVer365.Add Key:="{000204EF-0000-0000-C000-000000000046}", Item:=Array(4, 2, "VBA")
    dicRefVer365.Add Key:="{00020813-0000-0000-C000-000000000046}", Item:=Array(1, 9, "Excel")
    dicRefVer365.Add Key:="{00020430-0000-0000-C000-000000000046}", Item:=Array(2, 0, "stdole")
    dicRefVer365.Add Key:="{2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}", Item:=Array(2, 8, "Office")
    dicRefVer365.Add Key:="{00000600-0000-0010-8000-00AA006D2EA4}", Item:=Array(2, 8, "ADOX")
    dicRefVer365.Add Key:="{420B2830-E718-11CF-893D-00A0C9054228}", Item:=Array(1, 0, "Scripting")
    dicRefVer365.Add Key:="{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}", Item:=Array(9, 0, "Access")
    dicRefVer365.Add Key:="{0002E157-0000-0000-C000-000000000046}", Item:=Array(5, 3, "VBIDE")
    dicRefVer365.Add Key:="{F2A7EE29-8BF6-4A6D-83F1-098E366C709C}", Item:=Array(1, 0, "OneNote12")
    dicRefVer365.Add Key:="{0EA692EE-BB50-4E3C-AEF0-356D91732725}", Item:=Array(1, 0, "MISSED")
    dicRefVer365.Add Key:="{00025E01-0000-0000-C000-000000000046}", Item:=Array(5, 0, "DAO")
    dicRefVer365.Add Key:="{00062FFF-0000-0000-C000-000000000046}", Item:=Array(9, 6, "Outlook")

    Set dicTemp = New Dictionary
    dAppVer = 14#
    For Each vKey In dicRefVer2010.Keys
        If Not dicTemp.Exists(vKey) Then
            Set dicTemp(vKey) = New Dictionary
            dicTemp(vKey).Add Key:=dAppVer, Item:=dicRefVer2010(vKey)
        Else
            dicTemp(vKey).Add Key:=dAppVer, Item:=dicRefVer2010(vKey)
        End If
    Next
    
    dAppVer = 16
    For Each vKey In dicRefVer365.Keys
        If Not dicTemp.Exists(vKey) Then
            Set dicTemp(vKey) = New Dictionary
            dicTemp(vKey).Add Key:=dAppVer, Item:=dicRefVer365(vKey)
        Else
            dicTemp(vKey).Add Key:=dAppVer, Item:=dicRefVer365(vKey)
        End If
    Next
    Set CreateReferancesDictionary = dicTemp

End Function

'?******************************************************************************************************************************************************
'Content Number:    5
'Name:              ListReferancesProperties
'Purpose:
'?******************************************************************************************************************************************************
Sub ListReferancesProperties()

    Dim refReference    As VBIDE.Reference
    Dim bIsMissed       As Boolean
    Dim datTiemStamp    As Date
    
    Dim lRow    As Long
    Dim lCol    As Long
    Dim rCell   As Range
    Dim sName   As String

    
    Application.ScreenUpdating = False
    datTiemStamp = Now
    lRow = ActiveSheet.Columns(1).Cells(ActiveSheet.Columns(1).Cells.Count).End(xlUp).Row + 1: If lRow = 1 Then lRow = 2
    ThisWorkbook.ActiveSheet.UsedRange.Offset(lRow - 1).ClearContents
    
    
    If Not TrustedAccessToVBAProjects Then Exit Sub
    
    For Each refReference In ThisWorkbook.VBProject.References
        Set rCell = ActiveSheet.Cells(lRow, 1)
        With refReference
            On Error Resume Next
                bIsMissed = .IsBroken: If Err.Number > 0 Then bIsMissed = True
            On Error GoTo 0
            If Not bIsMissed Then
                sName = .Name
                lCol = lCol + 1: rCell.Offset(, lCol) = datTiemStamp
                lCol = lCol + 1: rCell.Offset(, lCol) = Application.OperatingSystem
                lCol = lCol + 1: rCell.Offset(, lCol) = Application.Version
                lCol = lCol + 1: rCell.Offset(, lCol) = .Name
                lCol = lCol + 1: rCell.Offset(, lCol) = .Description
                lCol = lCol + 1: rCell.Offset(, lCol) = .Major
                lCol = lCol + 1: rCell.Offset(, lCol) = .Minor
                lCol = lCol + 1: rCell.Offset(, lCol) = .GUID
                lCol = lCol + 1: rCell.Offset(, lCol) = .FullPath
                lCol = lCol + 1: rCell.Offset(, lCol) = .Type
                lCol = lCol + 1: rCell.Offset(, lCol) = .IsBroken
                lCol = lCol + 1: rCell.Offset(, lCol) = .BuiltIn
            Else
                sName = "MISSED"
                lCol = lCol + 1: rCell.Offset(, lCol) = datTiemStamp
                lCol = lCol + 1: rCell.Offset(, lCol) = Application.OperatingSystem
                lCol = lCol + 1: rCell.Offset(, lCol) = Application.Version
                lCol = lCol + 1: rCell.Offset(, lCol) = sName
                lCol = lCol + 1: rCell.Offset(, lCol) = "-"
                lCol = lCol + 1: rCell.Offset(, lCol) = .Major
                lCol = lCol + 1: rCell.Offset(, lCol) = .Minor
                lCol = lCol + 1: rCell.Offset(, lCol) = .GUID
                lCol = lCol + 1: rCell.Offset(, lCol) = "-"
                lCol = lCol + 1: rCell.Offset(, lCol) = .Type
                lCol = lCol + 1: rCell.Offset(, lCol) = "True"
                lCol = lCol + 1: rCell.Offset(, lCol) = .BuiltIn
            End If
            
            Debug.Print "dicRefVer365.add Key:=""" & .GUID & """, Item:=Array(" & .Major & ", " & .Minor & ", """ & sName & """)"
        End With
        lRow = lRow + 1
        lCol = 0
    Next
    
    ActiveSheet.Columns.AutoFit
    Set refReference = Nothing
    Application.ScreenUpdating = False
End Sub

